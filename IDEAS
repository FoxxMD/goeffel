## Data collection

- Use eBPF for acquiring advanced kernel statistics:
    - https://pypi.org/project/pyebpf/
    - https://github.com/iovisor/bcc


## Data emission

- allow for emitting data into a metrics pipeline via network (statsd, ...)


## File management

- HDF5 file management:  build in a concept that allows for "running this
  permanently" (update: done, at least the first attempt)

- File management in general: prevent accidental concurrent write access.
  Example scenario: messer started twice with default args in the same second.
  File locking?


## messer-analysis

- For the magic plot allow for a non-interactive mode which only writes to disk.

- control log level with command line flag


## Ideas for walk-through / tutorial / blog:

- Show how PID command picks up new PID
- Show inspect
- Show magic
- Show non-interactive magic, writing PNG file


## Misc notes

- build a mode without process-specific monitoring (no pid, no pid command)?

- measure resource utilization of messer with another instance of messer.

- Replace HDF5 type for columns with unit 'percent' to be Float16 instead of Float32?